"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./src/app/globals.css":
/*!*****************************!*\
  !*** ./src/app/globals.css ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"693faa239c9d\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvZ2xvYmFscy5jc3MiLCJtYXBwaW5ncyI6IjtBQUFBLCtEQUFlLGNBQWM7QUFDN0IsSUFBSSxJQUFVLElBQUksaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9hcHAvZ2xvYmFscy5jc3M/Yzg2NCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIjY5M2ZhYTIzOWM5ZFwiXG5pZiAobW9kdWxlLmhvdCkgeyBtb2R1bGUuaG90LmFjY2VwdCgpIH1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/globals.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/constants/mainController.ts":
/*!*****************************************!*\
  !*** ./src/constants/mainController.ts ***!
  \*****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tanstack/react-query */ \"(app-pages-browser)/./node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @tanstack/react-query */ \"(app-pages-browser)/./node_modules/@tanstack/react-query/build/modern/useMutation.js\");\n/* harmony import */ var sonner__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sonner */ \"(app-pages-browser)/./node_modules/sonner/dist/index.mjs\");\n/* harmony import */ var _api_management_MyHttpHelperWithToken__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./api_management/MyHttpHelperWithToken */ \"(app-pages-browser)/./src/constants/api_management/MyHttpHelperWithToken.ts\");\n/* harmony import */ var _api_management_MyHttpHelper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./api_management/MyHttpHelper */ \"(app-pages-browser)/./src/constants/api_management/MyHttpHelper.ts\");\n\n\n\n\nconst useApiManager = (param)=>{\n    let { endpoint, queryKey, method = \"POST\", isAuth = false, showSuccessToast = true, contentType = \"application/json\" } = param;\n    var _mutation_data;\n    const queryClient = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_3__.useQueryClient)();\n    const axiosInstance = isAuth ? _api_management_MyHttpHelperWithToken__WEBPACK_IMPORTED_MODULE_1__[\"default\"] : _api_management_MyHttpHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\n    const apiController = async (details)=>{\n        try {\n            let response;\n            // For FormData uploads, we need to explicitly remove the Content-Type header\n            // so axios can set the proper multipart/form-data boundary\n            const config = contentType === null ? {\n                headers: {\n                    \"Content-Type\": undefined\n                },\n                transformRequest: [\n                    (data)=>data\n                ] // Prevent axios from transforming FormData\n            } : contentType ? {\n                headers: {\n                    \"Content-Type\": contentType\n                }\n            } : {};\n            switch(method.toUpperCase()){\n                case \"POST\":\n                    response = await axiosInstance.post(endpoint, details, config);\n                    break;\n                case \"PUT\":\n                    response = await axiosInstance.put(endpoint, details, config);\n                    break;\n                case \"PATCH\":\n                    response = await axiosInstance.patch(endpoint, details, config);\n                    break;\n                case \"DELETE\":\n                    response = await axiosInstance.delete(endpoint, {\n                        ...config,\n                        data: details\n                    });\n                    break;\n                default:\n                    throw new Error(\"Unsupported HTTP method: \".concat(method));\n            }\n            return response.data;\n        } catch (error) {\n            var _axiosError_response, _axiosError_response1, _axiosError_response2, _axiosError_response3, _axiosError_response4, _axiosError_response5, _axiosError_response_data, _axiosError_response6, _axiosError_response_data1, _axiosError_response7, _axiosError_response8;\n            const axiosError = error;\n            console.error(\"API Error Details:\", {\n                status: (_axiosError_response = axiosError.response) === null || _axiosError_response === void 0 ? void 0 : _axiosError_response.status,\n                statusText: (_axiosError_response1 = axiosError.response) === null || _axiosError_response1 === void 0 ? void 0 : _axiosError_response1.statusText,\n                data: (_axiosError_response2 = axiosError.response) === null || _axiosError_response2 === void 0 ? void 0 : _axiosError_response2.data,\n                headers: (_axiosError_response3 = axiosError.response) === null || _axiosError_response3 === void 0 ? void 0 : _axiosError_response3.headers\n            });\n            console.error(\"Full error response data:\", JSON.stringify((_axiosError_response4 = axiosError.response) === null || _axiosError_response4 === void 0 ? void 0 : _axiosError_response4.data, null, 2));\n            // Handle validation errors (field-specific errors)\n            const data = (_axiosError_response5 = axiosError.response) === null || _axiosError_response5 === void 0 ? void 0 : _axiosError_response5.data;\n            if (data && typeof data === \"object\" && !data.message && !data.error) {\n                // Check if it's a field validation error object\n                const fieldErrors = Object.entries(data).map((param)=>{\n                    let [field, errors] = param;\n                    if (Array.isArray(errors)) {\n                        return \"\".concat(field, \": \").concat(errors.join(\", \"));\n                    }\n                    return \"\".concat(field, \": \").concat(errors);\n                });\n                if (fieldErrors.length > 0) {\n                    throw new Error(fieldErrors.join(\"\\n\"));\n                }\n            }\n            // Create more descriptive error message\n            let errorMessage = \"An unexpected error occurred\";\n            if ((_axiosError_response6 = axiosError.response) === null || _axiosError_response6 === void 0 ? void 0 : (_axiosError_response_data = _axiosError_response6.data) === null || _axiosError_response_data === void 0 ? void 0 : _axiosError_response_data.message) {\n                errorMessage = axiosError.response.data.message;\n            } else if ((_axiosError_response7 = axiosError.response) === null || _axiosError_response7 === void 0 ? void 0 : (_axiosError_response_data1 = _axiosError_response7.data) === null || _axiosError_response_data1 === void 0 ? void 0 : _axiosError_response_data1.error) {\n                errorMessage = axiosError.response.data.error;\n            } else if ((_axiosError_response8 = axiosError.response) === null || _axiosError_response8 === void 0 ? void 0 : _axiosError_response8.status) {\n                errorMessage = \"HTTP \".concat(axiosError.response.status, \": \").concat(axiosError.response.statusText || \"Unknown Error\");\n            } else if (axiosError.message) {\n                errorMessage = \"Network Error: \".concat(axiosError.message);\n            } else if (!navigator.onLine) {\n                errorMessage = \"No internet connection\";\n            }\n            console.error(\"Final error message:\", errorMessage);\n            throw new Error(errorMessage);\n        }\n    };\n    const mutation = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_4__.useMutation)({\n        mutationFn: apiController,\n        onSuccess: (response)=>{\n            if (showSuccessToast && response.message) {\n                sonner__WEBPACK_IMPORTED_MODULE_0__.toast.success(response.message);\n            }\n            if (queryKey) {\n                const updateQueryKeys = Array.isArray(queryKey) ? queryKey : [\n                    queryKey\n                ];\n                updateQueryKeys.forEach((key)=>{\n                    if (key) queryClient.invalidateQueries({\n                        queryKey: [\n                            key\n                        ]\n                    });\n                });\n            }\n        },\n        onError: (error)=>{\n            sonner__WEBPACK_IMPORTED_MODULE_0__.toast.error(error.message);\n            console.error(\"\".concat(method, \" error:\"), error);\n        }\n    });\n    const callApi = async (details)=>{\n        return await mutation.mutateAsync(details);\n    };\n    return {\n        callApi,\n        data: (_mutation_data = mutation.data) === null || _mutation_data === void 0 ? void 0 : _mutation_data.data,\n        response: mutation.data,\n        isLoading: mutation.isPending,\n        isSuccess: mutation.isSuccess,\n        error: mutation.error,\n        isError: mutation.isError,\n        mutation\n    };\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (useApiManager);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/constants/mainController.ts\n"));

/***/ })

});